pub const FONT_WIDTH: usize = 8;
pub const FONT_HEIGHT: usize = 16;

/// This is our own custom character set.
#[repr(u8)]
#[derive(Copy, Clone)]
pub enum Glyph {
    Unknown,
    Space,
    ExclamationMark,
    DoubleQuote,
    Hash,
    Dollar,
    Percent,
    Ampersand,
    SingleQuote,
    OpenRoundBracket,
    CloseRoundBracket,
    Asterisk,
    Plus,
    Comma,
    Minus,
    Period,
    Slash,
    Digit0,
    Digit1,
    Digit2,
    Digit3,
    Digit4,
    Digit5,
    Digit6,
    Digit7,
    Digit8,
    Digit9,
    Colon,
    SemiColon,
    LessThan,
    Equals,
    GreaterThan,
    QuestionMark,
    At,
    UppercaseA,
    UppercaseB,
    UppercaseC,
    UppercaseD,
    UppercaseE,
    UppercaseF,
    UppercaseG,
    UppercaseH,
    UppercaseI,
    UppercaseJ,
    UppercaseK,
    UppercaseL,
    UppercaseM,
    UppercaseN,
    UppercaseO,
    UppercaseP,
    UppercaseQ,
    UppercaseR,
    UppercaseS,
    UppercaseT,
    UppercaseU,
    UppercaseV,
    UppercaseW,
    UppercaseX,
    UppercaseY,
    UppercaseZ,
    OpenSquareBracket,
    Backslash,
    CloseSquareBracket,
    Caret,
    Underscore,
    Backtick,
    LowercaseA,
    LowercaseB,
    LowercaseC,
    LowercaseD,
    LowercaseE,
    LowercaseF,
    LowercaseG,
    LowercaseH,
    LowercaseI,
    LowercaseJ,
    LowercaseK,
    LowercaseL,
    LowercaseM,
    LowercaseN,
    LowercaseO,
    LowercaseP,
    LowercaseQ,
    LowercaseR,
    LowercaseS,
    LowercaseT,
    LowercaseU,
    LowercaseV,
    LowercaseW,
    LowercaseX,
    LowercaseY,
    LowercaseZ,
    OpenBrace,
    VerticalBar,
    CloseBrace,
    Tilde,
}

/// The font data here must be in the same order as the `Glyph` enum.
pub const FONT_DATA: [u8; 1536] = [
    0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,  // <unknown>
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // <space>
    0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x10,0x10,0x00,0x00,  // !
    0x24,0x24,0x24,0x24,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // "
    0x24,0x24,0x24,0x24,0x7E,0x7E,0x24,0x24,0x7E,0x7E,0x24,0x24,0x24,0x24,0x00,0x00,  // #
    0x10,0x10,0x3C,0x3C,0x50,0x50,0x38,0x38,0x14,0x14,0x78,0x78,0x10,0x10,0x00,0x00,  // $
    0x00,0x00,0x62,0x62,0x64,0x64,0x08,0x08,0x10,0x10,0x26,0x26,0x46,0x46,0x00,0x00,  // %
    0x30,0x30,0x48,0x48,0x48,0x48,0x30,0x30,0x4A,0x4A,0x44,0x44,0x3A,0x3A,0x00,0x00,  // &
    0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // '
    0x10,0x10,0x20,0x20,0x40,0x40,0x40,0x40,0x40,0x40,0x20,0x20,0x10,0x10,0x00,0x00,  // (
    0x10,0x10,0x08,0x08,0x04,0x04,0x04,0x04,0x04,0x04,0x08,0x08,0x10,0x10,0x00,0x00,  // )
    0x10,0x10,0x54,0x54,0x38,0x38,0x10,0x10,0x38,0x38,0x54,0x54,0x10,0x10,0x00,0x00,  // *
    0x00,0x00,0x10,0x10,0x10,0x10,0x7C,0x7C,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,  // +
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x10,0x10,0x00,0x00,  // ,
    0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x00,0x00,  // .
    0x00,0x00,0x02,0x02,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40,0x00,0x00,  // /

    0x3C,0x3C,0x42,0x42,0x46,0x46,0x5A,0x5A,0x62,0x62,0x42,0x42,0x3C,0x3C,0x00,0x00,  // 0
    0x08,0x08,0x18,0x18,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x1C,0x1C,0x00,0x00,  // 1
    0x3C,0x3C,0x42,0x42,0x02,0x02,0x1C,0x1C,0x20,0x20,0x40,0x40,0x7E,0x7E,0x00,0x00,  // 2
    0x7E,0x7E,0x02,0x02,0x04,0x04,0x1C,0x1C,0x02,0x02,0x42,0x42,0x3C,0x3C,0x00,0x00,  // 3
    0x04,0x04,0x0C,0x0C,0x14,0x14,0x24,0x24,0x7E,0x7E,0x04,0x04,0x04,0x04,0x00,0x00,  // 4
    0x7E,0x7E,0x40,0x40,0x7C,0x7C,0x02,0x02,0x02,0x02,0x42,0x42,0x3C,0x3C,0x00,0x00,  // 5
    0x1E,0x1E,0x20,0x20,0x40,0x40,0x7C,0x7C,0x42,0x42,0x42,0x42,0x3C,0x3C,0x00,0x00,  // 6
    0x7E,0x7E,0x02,0x02,0x04,0x04,0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,  // 7
    0x3C,0x3C,0x42,0x42,0x42,0x42,0x3C,0x3C,0x42,0x42,0x42,0x42,0x3C,0x3C,0x00,0x00,  // 8
    0x3C,0x3C,0x42,0x42,0x42,0x42,0x3E,0x3E,0x02,0x02,0x04,0x04,0x78,0x78,0x00,0x00,  // 9
    0x00,0x00,0x00,0x00,0x10,0x10,0x00,0x00,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,  // :
    0x00,0x00,0x00,0x00,0x08,0x08,0x00,0x00,0x08,0x08,0x08,0x08,0x10,0x00,0x00,0x00,  // ;
    0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x10,0x10,0x08,0x08,0x04,0x04,0x00,0x00,  // <
    0x00,0x00,0x00,0x00,0x7E,0x7E,0x00,0x00,0x7E,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,  // =
    0x20,0x20,0x10,0x10,0x08,0x08,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x00,0x00,  // >
    0x20,0x20,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // ?

    0x3C,0x3C,0x42,0x42,0x4A,0x4A,0x56,0x56,0x4C,0x4C,0x40,0x40,0x3E,0x3E,0x00,0x00,  // @
    0x18,0x18,0x24,0x24,0x42,0x42,0x42,0x42,0x7E,0x7E,0x42,0x42,0x42,0x42,0x00,0x00,  // A
    0x7C,0x7C,0x42,0x42,0x42,0x42,0x7C,0x7C,0x42,0x42,0x42,0x42,0x7C,0x7C,0x00,0x00,  // B
    0x3C,0x3C,0x42,0x42,0x40,0x40,0x40,0x40,0x40,0x40,0x42,0x42,0x3C,0x3C,0x00,0x00,  // C
    0x7C,0x7C,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x7C,0x7C,0x00,0x00,  // D
    0x7E,0x7E,0x40,0x40,0x40,0x40,0x7C,0x7C,0x40,0x40,0x40,0x40,0x7E,0x7E,0x00,0x00,  // E
    0x7E,0x7E,0x40,0x40,0x40,0x40,0x7C,0x7C,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x00,  // F
    0x3E,0x3E,0x40,0x40,0x40,0x40,0x40,0x4E,0x4E,0x42,0x42,0x42,0x3E,0x3E,0x00,0x00,  // G
    0x42,0x42,0x42,0x42,0x42,0x42,0x7E,0x7E,0x42,0x42,0x42,0x42,0x42,0x42,0x00,0x00,  // H
    0x38,0x38,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x38,0x38,0x00,0x00,  // I
    0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x42,0x42,0x3C,0x3C,0x00,0x00,  // J
    0x42,0x42,0x44,0x44,0x48,0x48,0x70,0x70,0x48,0x48,0x44,0x44,0x42,0x42,0x00,0x00,  // K
    0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7E,0x7E,0x00,0x00,  // L
    0x42,0x42,0x66,0x66,0x5A,0x5A,0x5A,0x5A,0x42,0x42,0x42,0x42,0x42,0x42,0x00,0x00,  // M
    0x42,0x42,0x62,0x62,0x52,0x52,0x5A,0x5A,0x4A,0x4A,0x46,0x46,0x42,0x42,0x00,0x00,  // N
    0x3C,0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x3C,0x00,0x00,  // O

    0x7C,0x7C,0x42,0x42,0x42,0x42,0x7C,0x7C,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x00,  // P
    0x3C,0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x4A,0x4A,0x44,0x44,0x3A,0x3A,0x00,0x00,  // Q
    0x7C,0x7C,0x42,0x42,0x42,0x42,0x7C,0x7C,0x48,0x48,0x44,0x44,0x42,0x42,0x00,0x00,  // R
    0x3C,0x3C,0x42,0x42,0x40,0x40,0x3C,0x3C,0x02,0x02,0x42,0x42,0x3C,0x3C,0x00,0x00,  // S
    0x7C,0x7C,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,  // T
    0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x3C,0x00,0x00,  // U
    0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x24,0x18,0x18,0x00,0x00,  // V
    0x42,0x42,0x42,0x42,0x42,0x42,0x5A,0x5A,0x5A,0x5A,0x66,0x66,0x42,0x42,0x00,0x00,  // W
    0x42,0x42,0x42,0x42,0x24,0x24,0x18,0x18,0x24,0x24,0x42,0x42,0x42,0x42,0x00,0x00,  // X
    0x44,0x44,0x44,0x44,0x28,0x28,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,  // Y
    0x7E,0x7E,0x02,0x02,0x04,0x04,0x18,0x18,0x20,0x20,0x40,0x40,0x7E,0x7E,0x00,0x00,  // Z
    0x7E,0x7E,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x7E,0x7E,0x00,0x00,  // [
    0x00,0x00,0x40,0x40,0x20,0x20,0x10,0x10,0x08,0x08,0x04,0x04,0x02,0x02,0x00,0x00,  // <backslash>
    0x7E,0x7E,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x7E,0x7E,0x00,0x00,  // ]
    0x00,0x00,0x00,0x00,0x10,0x10,0x28,0x28,0x44,0x44,0x00,0x00,0x00,0x00,0x00,0x00,  // ^
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x7E,0x00,0x00,  // _

    0x20,0x20,0x10,0x10,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // `
    0x00,0x00,0x00,0x00,0x3C,0x3C,0x02,0x02,0x3E,0x3E,0x42,0x42,0x3E,0x3E,0x00,0x00,  // a
    0x40,0x40,0x40,0x40,0x7C,0x7C,0x42,0x42,0x42,0x42,0x42,0x42,0x7C,0x7C,0x00,0x00,  // b
    0x00,0x00,0x00,0x00,0x3E,0x3E,0x40,0x40,0x40,0x40,0x40,0x40,0x3E,0x3E,0x00,0x00,  // c
    0x02,0x02,0x02,0x02,0x3E,0x3E,0x42,0x42,0x42,0x42,0x42,0x42,0x3E,0x3E,0x00,0x00,  // d
    0x00,0x00,0x00,0x00,0x3C,0x3C,0x42,0x42,0x7E,0x7E,0x40,0x40,0x3E,0x3E,0x00,0x00,  // e
    0x1C,0x1C,0x22,0x22,0x20,0x20,0x7C,0x7C,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,  // f
    0x00,0x00,0x00,0x00,0x3C,0x3C,0x42,0x42,0x42,0x42,0x3E,0x3E,0x02,0x02,0x3C,0x3C,  // g
    0x40,0x40,0x40,0x40,0x7C,0x7C,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x00,0x00,  // h
    0x10,0x10,0x00,0x00,0x30,0x30,0x10,0x10,0x10,0x10,0x10,0x10,0x38,0x38,0x00,0x00,  // i
    0x04,0x04,0x00,0x00,0x3C,0x3C,0x04,0x04,0x04,0x04,0x04,0x04,0x44,0x44,0x38,0x38,  // j
    0x40,0x40,0x40,0x40,0x42,0x42,0x44,0x44,0x78,0x78,0x44,0x44,0x42,0x42,0x00,0x00,  // k
    0x30,0x30,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x38,0x38,0x00,0x00,  // l
    0x00,0x00,0x00,0x00,0x66,0x66,0x5A,0x5A,0x5A,0x5A,0x5A,0x5A,0x42,0x42,0x00,0x00,  // m
    0x00,0x00,0x00,0x00,0x7C,0x7C,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x00,0x00,  // n
    0x00,0x00,0x00,0x00,0x3C,0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x3C,0x00,0x00,  // o

    0x00,0x00,0x00,0x00,0x7C,0x7C,0x42,0x42,0x42,0x42,0x7C,0x7C,0x40,0x40,0x40,0x40,  // p
    0x00,0x00,0x00,0x00,0x3E,0x3E,0x42,0x42,0x42,0x42,0x3E,0x3E,0x02,0x02,0x02,0x02,  // q
    0x00,0x00,0x00,0x00,0x5E,0x5E,0x60,0x60,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x00,  // r
    0x00,0x00,0x00,0x00,0x3E,0x3E,0x40,0x40,0x3C,0x3C,0x02,0x02,0x7C,0x7C,0x00,0x00,  // s
    0x10,0x10,0x10,0x10,0x7C,0x7C,0x10,0x10,0x10,0x10,0x12,0x12,0x0C,0x0C,0x00,0x00,  // t
    0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x46,0x46,0x3A,0x3A,0x00,0x00,  // u
    0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x24,0x18,0x18,0x00,0x00,  // v
    0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x5A,0x5A,0x5A,0x5A,0x66,0x66,0x00,0x00,  // w
    0x00,0x00,0x00,0x00,0x42,0x42,0x24,0x24,0x18,0x18,0x24,0x24,0x42,0x42,0x00,0x00,  // x
    0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x3E,0x3E,0x02,0x02,0x3C,0x3C,  // y
    0x00,0x00,0x00,0x00,0x7E,0x7E,0x04,0x04,0x18,0x18,0x20,0x20,0x7E,0x7E,0x00,0x00,  // z
    0x0E,0x0E,0x18,0x18,0x18,0x18,0x70,0x70,0x18,0x18,0x18,0x18,0x0E,0x0E,0x00,0x00,  // {
    0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,  // |
    0x70,0x70,0x18,0x18,0x18,0x18,0x0E,0x0E,0x18,0x18,0x18,0x18,0x70,0x70,0x00,0x00,  // }
    0x00,0x00,0x00,0x00,0x24,0x24,0x54,0x54,0x48,0x48,0x00,0x00,0x00,0x00,0x00,0x00,  // ~
];

impl Glyph {
    pub fn map_char(ch: char) -> Glyph {
        match ch {
            ' ' => Glyph::Space,
            '!' => Glyph::ExclamationMark,
            '"' => Glyph::DoubleQuote,
            '#' => Glyph::Hash,
            '$' => Glyph::Dollar,
            '%' => Glyph::Percent,
            '&' => Glyph::Ampersand,
            '\'' => Glyph::SingleQuote,
            '(' => Glyph::OpenRoundBracket,
            ')' => Glyph::CloseRoundBracket,
            '*' => Glyph::Asterisk,
            '+' => Glyph::Plus,
            ',' => Glyph::Comma,
            '-' => Glyph::Minus,
            '.' => Glyph::Period,
            '/' => Glyph::Slash,
            '0' => Glyph::Digit0,
            '1' => Glyph::Digit1,
            '2' => Glyph::Digit2,
            '3' => Glyph::Digit3,
            '4' => Glyph::Digit4,
            '5' => Glyph::Digit5,
            '6' => Glyph::Digit6,
            '7' => Glyph::Digit7,
            '8' => Glyph::Digit8,
            '9' => Glyph::Digit9,
            ':' => Glyph::Colon,
            ';' => Glyph::SemiColon,
            '<' => Glyph::LessThan,
            '=' => Glyph::Equals,
            '>' => Glyph::GreaterThan,
            '?' => Glyph::QuestionMark,
            '@' => Glyph::At,
            'A' => Glyph::UppercaseA,
            'B' => Glyph::UppercaseB,
            'C' => Glyph::UppercaseC,
            'D' => Glyph::UppercaseD,
            'E' => Glyph::UppercaseE,
            'F' => Glyph::UppercaseF,
            'G' => Glyph::UppercaseG,
            'H' => Glyph::UppercaseH,
            'I' => Glyph::UppercaseI,
            'J' => Glyph::UppercaseJ,
            'K' => Glyph::UppercaseK,
            'L' => Glyph::UppercaseL,
            'M' => Glyph::UppercaseM,
            'N' => Glyph::UppercaseN,
            'O' => Glyph::UppercaseO,
            'P' => Glyph::UppercaseP,
            'Q' => Glyph::UppercaseQ,
            'R' => Glyph::UppercaseR,
            'S' => Glyph::UppercaseS,
            'T' => Glyph::UppercaseT,
            'U' => Glyph::UppercaseU,
            'V' => Glyph::UppercaseV,
            'W' => Glyph::UppercaseW,
            'X' => Glyph::UppercaseX,
            'Y' => Glyph::UppercaseY,
            'Z' => Glyph::UppercaseZ,
            '[' => Glyph::OpenSquareBracket,
            '\\' => Glyph::Backslash,
            ']' => Glyph::CloseSquareBracket,
            '^' => Glyph::Caret,
            '_' => Glyph::Underscore,
            '`' => Glyph::Backtick,
            'a' => Glyph::LowercaseA,
            'b' => Glyph::LowercaseB,
            'c' => Glyph::LowercaseC,
            'd' => Glyph::LowercaseD,
            'e' => Glyph::LowercaseE,
            'f' => Glyph::LowercaseF,
            'g' => Glyph::LowercaseG,
            'h' => Glyph::LowercaseH,
            'i' => Glyph::LowercaseI,
            'j' => Glyph::LowercaseJ,
            'k' => Glyph::LowercaseK,
            'l' => Glyph::LowercaseL,
            'm' => Glyph::LowercaseM,
            'n' => Glyph::LowercaseN,
            'o' => Glyph::LowercaseO,
            'p' => Glyph::LowercaseP,
            'q' => Glyph::LowercaseQ,
            'r' => Glyph::LowercaseR,
            's' => Glyph::LowercaseS,
            't' => Glyph::LowercaseT,
            'u' => Glyph::LowercaseU,
            'v' => Glyph::LowercaseV,
            'w' => Glyph::LowercaseW,
            'x' => Glyph::LowercaseX,
            'y' => Glyph::LowercaseY,
            'z' => Glyph::LowercaseZ,
            '{' => Glyph::OpenBrace,
            '|' => Glyph::VerticalBar,
            '}' => Glyph::CloseBrace,
            '~' => Glyph::Tilde,
            _ => Glyph::Unknown,
        }
    }

    pub fn pixels(self, row: usize) -> u8 {
        let index = ((self as usize) * FONT_HEIGHT) + row;
        FONT_DATA[index]
    }
}
